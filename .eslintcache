[{"C:\\scratch\\Tweeder\\src\\index.js":"1","C:\\scratch\\Tweeder\\src\\App.js":"2","C:\\scratch\\Tweeder\\src\\FrontPage.js":"3","C:\\scratch\\Tweeder\\src\\home.js":"4","C:\\scratch\\Tweeder\\src\\NarBar.js":"5","C:\\scratch\\Tweeder\\src\\Shared\\appState.js":"6","C:\\scratch\\Tweeder\\src\\footer.js":"7","C:\\scratch\\Tweeder\\src\\Shared\\ApiCall.js":"8","C:\\scratch\\Tweeder\\src\\Home.js":"9","C:\\scratch\\Tweeder\\src\\Explore.js":"10","C:\\scratch\\Tweeder\\src\\Post.js":"11","C:\\scratch\\Tweeder\\src\\Bookmarks.js":"12","C:\\scratch\\Tweeder\\src\\FooterNavBar.js":"13","C:\\scratch\\Tweeder\\src\\PostImage.js":"14"},{"size":179,"mtime":1615988884000,"results":"15","hashOfConfig":"16"},{"size":2687,"mtime":1617101675473,"results":"17","hashOfConfig":"16"},{"size":1607,"mtime":1616582984029,"results":"18","hashOfConfig":"16"},{"size":13048,"mtime":1615975927818,"results":"19","hashOfConfig":"16"},{"size":4440,"mtime":1617099718985,"results":"20","hashOfConfig":"16"},{"size":720,"mtime":1616148832133,"results":"21","hashOfConfig":"16"},{"size":409,"mtime":1615988884000,"results":"22","hashOfConfig":"16"},{"size":963,"mtime":1615988884000,"results":"23","hashOfConfig":"16"},{"size":12977,"mtime":1616580658824,"results":"24","hashOfConfig":"16"},{"size":1857,"mtime":1616594330000,"results":"25","hashOfConfig":"16"},{"size":50919,"mtime":1617102163556,"results":"26","hashOfConfig":"16"},{"size":1284,"mtime":1616594330000,"results":"27","hashOfConfig":"16"},{"size":1133,"mtime":1617101598756,"results":"28","hashOfConfig":"16"},{"size":603,"mtime":1617101872088,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"r423w8",{"filePath":"33","messages":"34","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":1,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\scratch\\Tweeder\\src\\index.js",[],["66","67"],"C:\\scratch\\Tweeder\\src\\App.js",["68","69","70","71","72","73","74","75","76"],"C:\\scratch\\Tweeder\\src\\FrontPage.js",["77","78"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Style from \"./FrontPage.module.scss\";\r\nimport appStateContext from \"./Shared/appState\";\r\n\r\nconst FrontPage = () => {\r\n  const appState = useContext(appStateContext);\r\n\r\n  const Login = () => {\r\n    appState.Auth0Client.loginWithRedirect();\r\n  };\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={6}>\r\n        <div className={Style.FrontPageImg}>\r\n          <TwitterIcon />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <div className={Style.FrontPageText}>\r\n          <TwitterIcon />\r\n          <Typography variant=\"h3\" gutterBottom>\r\n            Happening Now\r\n          </Typography>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Join Tweeder today\r\n          </Typography>\r\n\r\n          <div>\r\n            <Button\r\n              classes={{ root: Style.BtnSignUp }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={Login}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              classes={{ root: Style.BtnLogIn }}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={Login}\r\n            >\r\n              Log In\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","C:\\scratch\\Tweeder\\src\\home.js",["79","80","81","82","83","84"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport HomePage from \"./HomePage.module.scss\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Footer from \"./footer.js\";\r\n\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nconst TrendingTweets = [\r\n  { TweetName: \"programming\", NumberOfTweets: \"200k\" },\r\n  { TweetName: \"devchallenges\", NumberOfTweets: \"123k\" },\r\n  { TweetName: \"frontend\", NumberOfTweets: \"34k\" },\r\n  { TweetName: \"helsinki\", NumberOfTweets: \"11k\" },\r\n  { TweetName: \"100DaysOfCode\", NumberOfTweets: \"5k\" },\r\n  { TweetName: \"learntoCode\", NumberOfTweets: \"1k\" }\r\n];\r\n\r\nconst home = () => {\r\n  const [OpenPopover, SetOpenPopover] = useState(false);\r\n  const ClosePopOver = () => SetOpenPopover(false);\r\n  const OpenPopoverFunc = (event) => SetOpenPopover(event.currentTarget);\r\n\r\n  return (\r\n    <div className={HomePage.background}>\r\n      <PerfectScrollbar className={HomePage.PostBody}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={8}>\r\n            <div className={HomePage.AddTweetContainer}>\r\n              <Typography variant=\"button\" gutterBottom>\r\n                Tweet Something\r\n              </Typography>\r\n              <Divider />\r\n              <div className={HomePage.AddTweetContent}>\r\n                <div className={HomePage.AddTweetTextboxContainer}>\r\n                  <Avatar variant=\"rounded\">s</Avatar>\r\n\r\n                  <TextField\r\n                    classes={{ root: HomePage.AddTweetTextbox }}\r\n                    fullWidth={true}\r\n                    label=\"Whats Happening?\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={HomePage.AddTweetBottom}>\r\n                <div>\r\n                  <IconButton>\r\n                    <ImageIcon />\r\n                  </IconButton>\r\n                  <Button onClick={OpenPopoverFunc} color=\"primary\">\r\n                    {\" \"}\r\n                    <PublicIcon /> <p> Everyone can reply </p>\r\n                  </Button>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Tweet\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Paper\r\n              classes={{ root: HomePage.TrendingTweetsContainer }}\r\n              elevation={0}\r\n            >\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    src=\"https://i.pinimg.com/originals/d8/ab/6a/d8ab6a527914cba58261361792653287.jpg\"\r\n                    alt=\"derp\"\r\n                  />\r\n                }\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title=\"derp\"\r\n                subheader={\"August 20, 2020 at 20:43 \"}\r\n              />{\" \"}\r\n              <CardContent>\r\n                {\" \"}\r\n                <Typography\r\n                  classes={{\r\n                    root: \"TextAllignLeft\"\r\n                  }}\r\n                  variant=\"body2\"\r\n                  component=\"p\"\r\n                >\r\n                  Nen dsanoifnoiegiwegniwegnoiwefoief\r\n                </Typography>\r\n                <Typography\r\n                  align=\"right\"\r\n                  variant=\"caption\"\r\n                  display=\"block\"\r\n                  gutterBottom\r\n                >\r\n                  449 Comments 59k Retweets 234 Saved\r\n                </Typography>\r\n                <Divider />\r\n                <div className={HomePage.PostButtonsContainer}>\r\n                  {\" \"}\r\n                  <Button>\r\n                    {\" \"}\r\n                    <CommentIcon /> <p> Comment</p>\r\n                  </Button>\r\n                  <Button classes={{ root: HomePage.RetweetBtn }}>\r\n                    {\" \"}\r\n                    <AutorenewIcon /> <p> Retweeted</p>\r\n                  </Button>\r\n                  <Button classes={{ root: HomePage.LikedBtn }}>\r\n                    {\" \"}\r\n                    <FavoriteBorderIcon /> <p> Liked</p>\r\n                  </Button>\r\n                  <Button classes={{ root: HomePage.SavedBtn }}>\r\n                    {\" \"}\r\n                    <BookmarkBorderIcon /> <p> Saved</p>\r\n                  </Button>\r\n                </div>\r\n                <Divider />\r\n              </CardContent>\r\n              <CardHeader\r\n                avatar={<Avatar variant=\"rounded\" alt=\"\" src=\"\"></Avatar>}\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <div>\r\n                    <InputBase\r\n                      fullWidth={true}\r\n                      multiline={true}\r\n                      value=\"\"\r\n                      classes={{ root: HomePage.AddCommentTextBox }}\r\n                      placeholder=\"Tweet Your Reply\"\r\n                      endAdornment={\r\n                        <IconButton>\r\n                          <ImageIcon />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </div>\r\n                }\r\n              />\r\n              <CardHeader\r\n                avatar={<Avatar variant=\"rounded\" alt=\"\" src=\"\"></Avatar>}\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <>\r\n                    <div className={HomePage.DisplayCommentTextBox}>\r\n                      <div>\r\n                        <Typography\r\n                          display=\"inline\"\r\n                          variant=\"subtitle1\"\r\n                          gutterBottom\r\n                        >\r\n                          Bob Smithty {\"        \"}\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          display=\"inline\"\r\n                          variant=\"caption\"\r\n                          gutterBottom\r\n                        >\r\n                          August 20, 2020 at 20:43\r\n                        </Typography>\r\n                      </div>\r\n                      <Typography variant=\"body2\" gutterBottom>\r\n                        This is a test comment. TEST TESTTESTTESTTESTTEST\r\n                        TESTTESTTESTTESTTESTTESTTEST\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <Button size=\"small\" classes={{ root: HomePage.LikedBtn }}>\r\n                      {\" \"}\r\n                      <FavoriteBorderIcon /> Liked\r\n                    </Button>\r\n\r\n                    <Typography display=\"inline\" variant=\"caption\" gutterBottom>\r\n                      12.3 Likes\r\n                    </Typography>\r\n                  </>\r\n                }\r\n              />\r\n            </Paper>\r\n\r\n            <Popover\r\n              classes={{ paper: HomePage.AddTweetPopover }}\r\n              open={Boolean(OpenPopover)}\r\n              anchorEl={OpenPopover}\r\n              onClose={ClosePopOver}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"center\"\r\n              }}\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"center\"\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Who can reply?\r\n              </Typography>\r\n\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                Choose who can reply to this Tweet\r\n              </Typography>\r\n              <Button\r\n                classes={{ root: HomePage.PopoverButtons }}\r\n                fullWidth={true}\r\n              >\r\n                {\" \"}\r\n                <PublicIcon /> <p> Everyone </p>\r\n              </Button>\r\n\r\n              <Button\r\n                classes={{ root: HomePage.PopoverButtons }}\r\n                fullWidth={true}\r\n              >\r\n                {\" \"}\r\n                <PeopleIcon /> <p> People you follow </p>\r\n              </Button>\r\n            </Popover>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <Paper\r\n              classes={{ root: HomePage.TrendingTweetsContainer }}\r\n              elevation={0}\r\n            >\r\n              {\" \"}\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Trends for you\r\n              </Typography>{\" \"}\r\n              <Divider />\r\n              {TrendingTweets.map((tweet) => {\r\n                return (\r\n                  <div>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      #{tweet.TweetName}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" gutterBottom>\r\n                      {tweet.NumberOfTweets} Tweets\r\n                    </Typography>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Paper>\r\n\r\n            <Paper\r\n              classes={{ root: HomePage.TrendingTweetsContainer }}\r\n              elevation={0}\r\n            >\r\n              {\" \"}\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Who to Follow\r\n              </Typography>{\" \"}\r\n              <Divider />\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    src=\"https://i.pinimg.com/originals/d8/ab/6a/d8ab6a527914cba58261361792653287.jpg\"\r\n                    alt=\"derp\"\r\n                  />\r\n                }\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Derp\r\n                  </Typography>\r\n                }\r\n                subheader={\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    230k Followers\r\n                  </Typography>\r\n                }\r\n                action={\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Tweet\r\n                  </Button>\r\n                }\r\n              />\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                MUNCH MUNCHMUNCHMUNCHMUNCHMUNCH MUNCH MUNCH MUNCH MUNCH MUNCH\r\n              </Typography>\r\n              <img\r\n                style={{ height: \"100%\", width: \"100%\" }}\r\n                src=\"https://lh3.googleusercontent.com/proxy/tmZo_sc4Pczuo9Xy6wTC8Z3Iv6rtVKJNwoOmpjH8F5Un3lVOGLo54-EgEbdpZbFWQzpItkjERjP4mbtTRVvKC2zJt_fScfp1OrB-_q0N0Ds\"\r\n              />\r\n              <Divider />\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    src=\"https://pm1.narvii.com/6170/6b10b3eafebf6f89c28da751e9748976732f5d24_hq.jpg\"\r\n                    alt=\"derp\"\r\n                  />\r\n                }\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Derp\r\n                  </Typography>\r\n                }\r\n                subheader={\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    230k Followers\r\n                  </Typography>\r\n                }\r\n                action={\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Tweet\r\n                  </Button>\r\n                }\r\n              />\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                MUNCH MUNCHMUNCHMUNCHMUNCHMUNCH MUNCH MUNCH MUNCH MUNCH MUNCH\r\n              </Typography>\r\n              <img\r\n                style={{ height: \"100%\", width: \"100%\" }}\r\n                src=\"https://pm1.narvii.com/6170/6b10b3eafebf6f89c28da751e9748976732f5d24_hq.jpg\"\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Footer />\r\n        </Grid>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default home;\r\n",["85","86"],"C:\\scratch\\Tweeder\\src\\NarBar.js",["87","88"],"C:\\scratch\\Tweeder\\src\\Shared\\appState.js",["89","90"],"import { observable, action, computed } from \"mobx\";\nimport { ApiCall } from \"./ApiCall\";\nimport { createContext } from \"react\";\n\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nclass AppState {\n  @observable Auth0Client = \"\";\n\n  @action GetAuth0Client = async () => {\n   await  createAuth0Client({\n      domain: \"dev-5wttvoce.auth0.com\",\n      client_id: \"a47WBv2GDMgTgLLpbRkDQK31mkPVcnGh\",\n      //Redirect URL when authenication suceeds\n      redirect_uri: `${process.env.REACT_APP_FrontEndSiteURL}`\n      /*, audience: \"https://TweederClone.com\" */\n    }).then((auth0) => {\n      this.Auth0Client = auth0;\n    });\n  };\n}\n \nconst appStateContext = createContext(new AppState());\nexport default appStateContext;\n","C:\\scratch\\Tweeder\\src\\footer.js",[],"C:\\scratch\\Tweeder\\src\\Shared\\ApiCall.js",[],"C:\\scratch\\Tweeder\\src\\Home.js",["91","92","93","94","95","96","97"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport HomePage from \"./HomePage.module.scss\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Footer from \"./footer.js\";\r\n\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n  const TrendingTweets = [\r\n    { TweetName: \"programming\", NumberOfTweets: \"200k\" },\r\n    { TweetName: \"devchallenges\", NumberOfTweets: \"123k\" },\r\n    { TweetName: \"frontend\", NumberOfTweets: \"34k\" },\r\n    { TweetName: \"helsinki\", NumberOfTweets: \"11k\" },\r\n    { TweetName: \"100DaysOfCode\", NumberOfTweets: \"5k\" },\r\n    { TweetName: \"learntoCode\", NumberOfTweets: \"1k\" }\r\n  ];\r\n  \r\n\r\n  const [OpenPopover, SetOpenPopover] = React.useState(false);\r\n \r\n  const ClosePopOver = () => SetOpenPopover(false);\r\n  const OpenPopoverFunc = (event) => SetOpenPopover(event.currentTarget);\r\n\r\n  return (\r\n    <div className={HomePage.background}>\r\n       \r\n        <Grid container spacing={4}>\r\n          <Grid item xs={8}>\r\n            <div className={HomePage.AddTweetContainer}>\r\n              <Typography variant=\"button\" gutterBottom>\r\n                Tweet Something\r\n              </Typography>\r\n              <Divider />\r\n              <div className={HomePage.AddTweetContent}>\r\n                <div className={HomePage.AddTweetTextboxContainer}>\r\n                  <Avatar variant=\"rounded\">s</Avatar>\r\n\r\n                  <TextField\r\n                    classes={{ root: HomePage.AddTweetTextbox }}\r\n                    fullWidth={true}\r\n                    label=\"Whats Happening?\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={HomePage.AddTweetBottom}>\r\n                <div>\r\n                  <IconButton>\r\n                    <ImageIcon />\r\n                  </IconButton>\r\n                  <Button onClick={OpenPopoverFunc} color=\"primary\">\r\n                    {\" \"}\r\n                    <PublicIcon /> <p> Everyone can reply </p>\r\n                  </Button>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Tweet\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Paper\r\n              classes={{ root: HomePage.TrendingTweetsContainer }}\r\n              elevation={0}\r\n            >\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    src=\"https://i.pinimg.com/originals/d8/ab/6a/d8ab6a527914cba58261361792653287.jpg\"\r\n                    alt=\"derp\"\r\n                  />\r\n                }\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title=\"derp\"\r\n                subheader={\"August 20, 2020 at 20:43 \"}\r\n              />{\" \"}\r\n              <CardContent>\r\n                {\" \"}\r\n                <Typography\r\n                  classes={{\r\n                    root: \"TextAllignLeft\"\r\n                  }}\r\n                  variant=\"body2\"\r\n                  component=\"p\"\r\n                >\r\n                  Nen dsanoifnoiegiwegniwegnoiwefoief\r\n                </Typography>\r\n                <Typography\r\n                  align=\"right\"\r\n                  variant=\"caption\"\r\n                  display=\"block\"\r\n                  gutterBottom\r\n                >\r\n                  449 Comments 59k Retweets 234 Saved\r\n                </Typography>\r\n                <Divider />\r\n                <div className={HomePage.PostButtonsContainer}>\r\n                  {\" \"}\r\n                  <Button>\r\n                    {\" \"}\r\n                    <CommentIcon /> <p> Comment</p>\r\n                  </Button>\r\n                  <Button classes={{ root: HomePage.RetweetBtn }}>\r\n                    {\" \"}\r\n                    <AutorenewIcon /> <p> Retweeted</p>\r\n                  </Button>\r\n                  <Button classes={{ root: HomePage.LikedBtn }}>\r\n                    {\" \"}\r\n                    <FavoriteBorderIcon /> <p> Liked</p>\r\n                  </Button>\r\n                  <Button classes={{ root: HomePage.SavedBtn }}>\r\n                    {\" \"}\r\n                    <BookmarkBorderIcon /> <p> Saved</p>\r\n                  </Button>\r\n                </div>\r\n                <Divider />\r\n              </CardContent>\r\n              <CardHeader\r\n                avatar={<Avatar variant=\"rounded\" alt=\"\" src=\"\"></Avatar>}\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <div>\r\n                    <InputBase\r\n                      fullWidth={true}\r\n                      multiline={true}\r\n                      value=\"\"\r\n                      classes={{ root: HomePage.AddCommentTextBox }}\r\n                      placeholder=\"Tweet Your Reply\"\r\n                      endAdornment={\r\n                        <IconButton>\r\n                          <ImageIcon />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </div>\r\n                }\r\n              />\r\n              <CardHeader\r\n                avatar={<Avatar variant=\"rounded\" alt=\"\" src=\"\"></Avatar>}\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <>\r\n                    <div className={HomePage.DisplayCommentTextBox}>\r\n                      <div>\r\n                        <Typography\r\n                          display=\"inline\"\r\n                          variant=\"subtitle1\"\r\n                          gutterBottom\r\n                        >\r\n                          Bob Smithty {\"        \"}\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          display=\"inline\"\r\n                          variant=\"caption\"\r\n                          gutterBottom\r\n                        >\r\n                          August 20, 2020 at 20:43\r\n                        </Typography>\r\n                      </div>\r\n                      <Typography variant=\"body2\" gutterBottom>\r\n                        This is a test comment. TEST TESTTESTTESTTESTTEST\r\n                        TESTTESTTESTTESTTESTTESTTEST\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <Button size=\"small\" classes={{ root: HomePage.LikedBtn }}>\r\n                      {\" \"}\r\n                      <FavoriteBorderIcon /> Liked\r\n                    </Button>\r\n\r\n                    <Typography display=\"inline\" variant=\"caption\" gutterBottom>\r\n                      12.3 Likes\r\n                    </Typography>\r\n                  </>\r\n                }\r\n              />\r\n            </Paper>\r\n\r\n            <Popover\r\n              classes={{ paper: HomePage.AddTweetPopover }}\r\n              open={Boolean(OpenPopover)}\r\n              anchorEl={OpenPopover}\r\n              onClose={ClosePopOver}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"center\"\r\n              }}\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"center\"\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Who can reply?\r\n              </Typography>\r\n\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                Choose who can reply to this Tweet\r\n              </Typography>\r\n              <Button\r\n                classes={{ root: HomePage.PopoverButtons }}\r\n                fullWidth={true}\r\n              >\r\n                {\" \"}\r\n                <PublicIcon /> <p> Everyone </p>\r\n              </Button>\r\n\r\n              <Button\r\n                classes={{ root: HomePage.PopoverButtons }}\r\n                fullWidth={true}\r\n              >\r\n                {\" \"}\r\n                <PeopleIcon /> <p> People you follow </p>\r\n              </Button>\r\n            </Popover>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <Paper\r\n              classes={{ root: HomePage.TrendingTweetsContainer }}\r\n              elevation={0}\r\n            >\r\n              {\" \"}\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Trends for you\r\n              </Typography>{\" \"}\r\n              <Divider />\r\n              {TrendingTweets.map((tweet) => {\r\n                return (\r\n                  <div>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      #{tweet.TweetName}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" gutterBottom>\r\n                      {tweet.NumberOfTweets} Tweets\r\n                    </Typography>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Paper>\r\n\r\n            <Paper\r\n              classes={{ root: HomePage.TrendingTweetsContainer }}\r\n              elevation={0}\r\n            >\r\n              {\" \"}\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Who to Follow\r\n              </Typography>{\" \"}\r\n              <Divider />\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    src=\"https://i.pinimg.com/originals/d8/ab/6a/d8ab6a527914cba58261361792653287.jpg\"\r\n                    alt=\"derp\"\r\n                  />\r\n                }\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Derp\r\n                  </Typography>\r\n                }\r\n                subheader={\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    230k Followers\r\n                  </Typography>\r\n                }\r\n                action={\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Tweet\r\n                  </Button>\r\n                }\r\n              />\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                MUNCH MUNCHMUNCHMUNCHMUNCHMUNCH MUNCH MUNCH MUNCH MUNCH MUNCH\r\n              </Typography>\r\n              <img\r\n                style={{ height: \"100%\", width: \"100%\" }}\r\n                src=\"https://lh3.googleusercontent.com/proxy/tmZo_sc4Pczuo9Xy6wTC8Z3Iv6rtVKJNwoOmpjH8F5Un3lVOGLo54-EgEbdpZbFWQzpItkjERjP4mbtTRVvKC2zJt_fScfp1OrB-_q0N0Ds\"\r\n              />\r\n              <Divider />\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    src=\"https://pm1.narvii.com/6170/6b10b3eafebf6f89c28da751e9748976732f5d24_hq.jpg\"\r\n                    alt=\"derp\"\r\n                  />\r\n                }\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Derp\r\n                  </Typography>\r\n                }\r\n                subheader={\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    230k Followers\r\n                  </Typography>\r\n                }\r\n                action={\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Tweet\r\n                  </Button>\r\n                }\r\n              />\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                MUNCH MUNCHMUNCHMUNCHMUNCHMUNCH MUNCH MUNCH MUNCH MUNCH MUNCH\r\n              </Typography>\r\n              <img\r\n                style={{ height: \"100%\", width: \"100%\" }}\r\n                src=\"https://pm1.narvii.com/6170/6b10b3eafebf6f89c28da751e9748976732f5d24_hq.jpg\"\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Footer />\r\n        </Grid>\r\n \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\scratch\\Tweeder\\src\\Explore.js",["98","99"],"import Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport Shared from \"./Shared.module.scss\";\r\nimport Post from \"./Post.js\";\r\nconst Explore = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Grid spacing={2} container>\r\n      <Grid item xs={3}>\r\n        <div className={Shared.TabContainer}>\r\n          <Paper>\r\n            <Tabs\r\n              classes={{ indicator: Shared.TabUnderline }}\r\n              orientation=\"vertical\"\r\n              variant=\"scrollable\"\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              <Tab label=\"Top\" />\r\n              <Tab label=\"Lastest\" />\r\n              <Tab label=\"People\" />\r\n              <Tab label=\"Media\" />\r\n            </Tabs>\r\n          </Paper>\r\n        </div>\r\n      </Grid>\r\n\r\n      <Grid item xs={9}>\r\n        <Paper>\r\n          <InputBase\r\n            fullWidth={true}\r\n            multiline={true}\r\n            value=\"\"\r\n            placeholder=\"Tweet Your Reply\"\r\n            startAdornment={<SearchIcon />}\r\n            endAdornment={\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Search\r\n              </Button>\r\n            }\r\n          />\r\n        </Paper>\r\n\r\n        <Post />\r\n        <Post />\r\n        <Post />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Explore;\r\n","C:\\scratch\\Tweeder\\src\\Post.js",[],"C:\\scratch\\Tweeder\\src\\Bookmarks.js",["100","101"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport Post from \"./Post\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Shared from \"./Shared.module.scss\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst Bookmarks = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={3}>\r\n        <div className={Shared.TabContainer}>\r\n          <Paper>\r\n            <Tabs\r\n              classes={{ indicator: Shared.TabUnderline }}\r\n              orientation=\"vertical\"\r\n              variant=\"scrollable\"\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              <Tab label=\"Tweets\" />\r\n              <Tab label=\"Tweets & replies\" />\r\n              <Tab label=\"Media\" />\r\n              <Tab label=\"Likes\" />\r\n            </Tabs>\r\n          </Paper>\r\n        </div>\r\n      </Grid>\r\n\r\n      <Grid item xs={9}>\r\n        <Post />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Bookmarks;\r\n","C:\\scratch\\Tweeder\\src\\FooterNavBar.js",["102"],"C:\\scratch\\Tweeder\\src\\PostImage.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":12},{"ruleId":"107","severity":1,"message":"111","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":11},{"ruleId":"107","severity":1,"message":"112","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":24},{"ruleId":"107","severity":1,"message":"113","line":12,"column":8,"nodeType":"109","messageId":"110","endLine":12,"endColumn":16},{"ruleId":"107","severity":1,"message":"114","line":24,"column":10,"nodeType":"109","messageId":"110","endLine":24,"endColumn":15},{"ruleId":"115","severity":1,"message":"116","line":29,"column":13,"nodeType":"117","endLine":61,"endColumn":4},{"ruleId":"115","severity":1,"message":"118","line":61,"column":6,"nodeType":"119","endLine":61,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":62,"column":3,"nodeType":"123","messageId":"124","endLine":64,"endColumn":4},{"ruleId":"107","severity":1,"message":"125","line":66,"column":9,"nodeType":"109","messageId":"110","endLine":66,"endColumn":21},{"ruleId":"107","severity":1,"message":"126","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"127","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"126","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"128","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":48},{"ruleId":"107","severity":1,"message":"129","line":10,"column":8,"nodeType":"109","messageId":"110","endLine":10,"endColumn":19},{"ruleId":"130","severity":2,"message":"131","line":36,"column":41,"nodeType":"109","endLine":36,"endColumn":49},{"ruleId":"132","severity":1,"message":"133","line":308,"column":15,"nodeType":"134","endLine":311,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":343,"column":15,"nodeType":"134","endLine":346,"endColumn":17},{"ruleId":"103","replacedBy":"135"},{"ruleId":"105","replacedBy":"136"},{"ruleId":"107","severity":1,"message":"126","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"127","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"137","line":1,"column":30,"nodeType":"109","messageId":"110","endLine":1,"endColumn":38},{"ruleId":"107","severity":1,"message":"138","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":17},{"ruleId":"107","severity":1,"message":"126","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"127","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"128","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":48},{"ruleId":"107","severity":1,"message":"112","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":24},{"ruleId":"107","severity":1,"message":"129","line":10,"column":8,"nodeType":"109","messageId":"110","endLine":10,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":313,"column":15,"nodeType":"134","endLine":316,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":348,"column":15,"nodeType":"134","endLine":351,"endColumn":17},{"ruleId":"107","severity":1,"message":"126","line":8,"column":17,"nodeType":"109","messageId":"110","endLine":8,"endColumn":26},{"ruleId":"107","severity":1,"message":"128","line":8,"column":38,"nodeType":"109","messageId":"110","endLine":8,"endColumn":48},{"ruleId":"107","severity":1,"message":"126","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"128","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":48},{"ruleId":"107","severity":1,"message":"139","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":20},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'Tabs' is defined but never used.","Identifier","unusedVar","'Tab' is defined but never used.","'PerfectScrollbar' is defined but never used.","'HomePage' is defined but never used.","'value' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'appState'. Either include it or remove the dependency array.","ArrayExpression",["142"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleChange' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'CardActions' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"home\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["140"],["141"],"'computed' is defined but never used.","'ApiCall' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [appState]",{"range":"145","text":"146"},[1735,1737],"[appState]"]