[{"C:\\scratch\\Code\\Tweeder\\src\\index.js":"1","C:\\scratch\\Code\\Tweeder\\src\\App.js":"2","C:\\scratch\\Code\\Tweeder\\src\\FrontPage.js":"3","C:\\scratch\\Code\\Tweeder\\src\\Bookmarks.js":"4","C:\\scratch\\Code\\Tweeder\\src\\Profile.js":"5","C:\\scratch\\Code\\Tweeder\\src\\Home.js":"6","C:\\scratch\\Code\\Tweeder\\src\\Explore.js":"7","C:\\scratch\\Code\\Tweeder\\src\\FooterNavBar.js":"8","C:\\scratch\\Code\\Tweeder\\src\\NarBar.js":"9","C:\\scratch\\Code\\Tweeder\\src\\Shared\\appState.js":"10","C:\\scratch\\Code\\Tweeder\\src\\footer.js":"11","C:\\scratch\\Code\\Tweeder\\src\\Post.js":"12","C:\\scratch\\Code\\Tweeder\\src\\Shared\\ApiCall.js":"13","C:\\scratch\\Code\\Tweeder\\src\\PostImage.js":"14"},{"size":179,"mtime":1618067056000,"results":"15","hashOfConfig":"16"},{"size":2725,"mtime":1618067056000,"results":"17","hashOfConfig":"16"},{"size":1549,"mtime":1618067056000,"results":"18","hashOfConfig":"16"},{"size":1505,"mtime":1618067056000,"results":"19","hashOfConfig":"16"},{"size":3972,"mtime":1618067056000,"results":"20","hashOfConfig":"16"},{"size":9810,"mtime":1618067056000,"results":"21","hashOfConfig":"16"},{"size":2037,"mtime":1618067056000,"results":"22","hashOfConfig":"16"},{"size":1103,"mtime":1618067056000,"results":"23","hashOfConfig":"16"},{"size":4828,"mtime":1618067056000,"results":"24","hashOfConfig":"16"},{"size":720,"mtime":1618067056000,"results":"25","hashOfConfig":"16"},{"size":392,"mtime":1618067056000,"results":"26","hashOfConfig":"16"},{"size":8365,"mtime":1618067056000,"results":"27","hashOfConfig":"16"},{"size":963,"mtime":1618067056000,"results":"28","hashOfConfig":"16"},{"size":579,"mtime":1618067056000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"xi9eb1",{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\scratch\\Code\\Tweeder\\src\\index.js",[],["69","70"],"C:\\scratch\\Code\\Tweeder\\src\\App.js",["71","72","73","74","75"],"import FrontPage from \"./FrontPage\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport appStateContext from \"./Shared/appState\";\nimport \"./Global.scss\";\nimport Home from \"./Home\";\nimport NavBar from \"./NarBar\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport Fade from \"react-reveal/Fade\";\nimport Profile from \"./Profile\";\nimport Explore from \"./Explore\";\nimport Bookmarks from \"./Bookmarks\";\nimport FooterNavBar from \"./FooterNavBar\";\n//https://www.ronaldjamesgroup.com/blog/reason-behind-using-refs-instead-of-id-in-react-js\n//https://www.javascriptstuff.com/use-refs-not-ids/\n//https://underbelly.is/writing-about/using-react-refs-to-manipulate-the-dom\nconst App = () => {\n  const appState = useContext(appStateContext);\n  const [TabValue, SetTabValue] = useState(0);\n  const [Authenicated, SetAuthenication] = useState(false);\n  const [value, setValue] = React.useState(0);\n\n  const UpdateTab = (newValue) => {\n    SetTabValue(newValue);\n  };\n  useEffect(async () => {\n    await appState.GetAuth0Client();\n\n    setTimeout(async () => {\n      if (window.location.search.includes(\"code=\")) {\n        SetAuthenication(true);\n      } else {\n        const isAuthenticated = await appState.Auth0Client.isAuthenticated();\n        SetAuthenication(isAuthenticated);\n      }\n    }, 1000);\n\n    try {\n      await appState.Auth0Client.getTokenSilently();\n    } catch (error) {\n      console.log(error);\n      /* if (error.error !== 'login_required') {\n                throw error\n          } */\n    }\n  }, []);\n  {\n    /*  */\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const isAuthenticated = () => {\n    if (Authenicated) {\n      return (\n        <>\n          <NavBar TabValue={TabValue} UpdateTab={UpdateTab} />\n          <div className=\"PostBody\">\n            {TabValue === 0 ? (\n              <Fade>\n                <Home />\n              </Fade>\n            ) : (\n              <div />\n            )}\n\n            {TabValue === 1 ? (\n              <Fade>\n                <Explore />\n              </Fade>\n            ) : (\n              <div />\n            )}\n\n            {TabValue === 2 ? (\n              <Fade>\n                <Bookmarks />\n              </Fade>\n            ) : (\n              <div />\n            )}\n\n            {TabValue === 3 ? (\n              <Fade>\n                <Profile />\n              </Fade>\n            ) : (\n              <div />\n            )}\n\n            <FooterNavBar TabValue={TabValue} UpdateTab={UpdateTab} />\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <Fade>\n          <FrontPage />\n        </Fade>\n      );\n    }\n  };\n\n  return <>{isAuthenticated()}</>;\n};\n\nexport default App;\n","C:\\scratch\\Code\\Tweeder\\src\\FrontPage.js",["76","77"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Style from \"./FrontPage.module.scss\";\nimport appStateContext from \"./Shared/appState\";\n\nconst FrontPage = () => {\n  const appState = useContext(appStateContext);\n\n  const Login = () => {\n    appState.Auth0Client.loginWithRedirect();\n  };\n  return (\n    <Grid container>\n      <Grid item xs={6}>\n        <div className={Style.FrontPageImg}>\n          <TwitterIcon />\n        </div>\n      </Grid>\n      <Grid item xs={6}>\n        <div className={Style.FrontPageText}>\n          <TwitterIcon />\n          <Typography variant=\"h3\" gutterBottom>\n            Happening Now\n          </Typography>\n          <Typography variant=\"h4\" gutterBottom>\n            Join Tweeder today\n          </Typography>\n\n          <div>\n            <Button\n              classes={{ root: Style.BtnSignUp }}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={Login}\n            >\n              Sign Up\n            </Button>\n          </div>\n          <div>\n            <Button\n              classes={{ root: Style.BtnLogIn }}\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={Login}\n            >\n              Log In\n            </Button>\n          </div>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FrontPage;\n","C:\\scratch\\Code\\Tweeder\\src\\Bookmarks.js",["78","79"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Post from \"./Post\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Shared from \"./Shared.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nconst Bookmarks = () => {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12} sm={3}>\n        <div className={Shared.TabContainer}>\n          <Paper>\n            <Tabs\n              classes={{ indicator: Shared.TabUnderline }}\n              orientation=\"vertical\"\n              variant=\"scrollable\"\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              centered\n            >\n              <Tab label=\"Tweets\" />\n              <Tab label=\"Tweets & replies\" />\n              <Tab label=\"Media\" />\n              <Tab label=\"Likes\" />\n            </Tabs>\n          </Paper>\n        </div>\n      </Grid>\n\n      <Grid item xs={12} sm={9}>\n        <Grid container>\n          <Grid item xs={12} md={6}>\n            <Post />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Post />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Post />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Bookmarks;\n","C:\\scratch\\Code\\Tweeder\\src\\Profile.js",["80","81","82","83","84","85"],"import Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ProfileStyle from \"./Profile.module.scss\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Shared from \"./Shared.module.scss\";\nimport Post from \"./Post\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nconst Profile = () => {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div>\n      <img\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS-L7nEHZyplLzTq_blSdSi7ZaScWBd77voWg&usqp=CAU\"\n        alt=\"background image\"\n        width=\"100%\"\n        height=\"200px\"\n      />\n\n      <Paper classes={{ root: ProfileStyle.BioBackground }}>\n        <Grid container>\n          <Grid item xs={12} md={2}>\n            <img\n              className={ProfileStyle.ImgProfile}\n              src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS-L7nEHZyplLzTq_blSdSi7ZaScWBd77voWg&usqp=CAU\"\n              alt=\"background image\"\n              width=\"150px\"\n              height=\"150px\"\n            />\n          </Grid>\n          <Grid item xs={12} md={10}>\n            <div>\n              <Grid container justify=\"space-between\" alignItems=\"flex-start\">\n                <Grid item xs={12} md={10}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <Typography\n                        gutterBottom\n                        display=\"inline\"\n                        variant=\"h6\"\n                        gutterBottom\n                      >\n                        Bob Smith {\"  \"}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography\n                        gutterBottom\n                        display=\"inline\"\n                        variant=\"subtitle1\"\n                        gutterBottom\n                      >\n                        <b> 3000 </b> following <b> 12.3k </b> followers\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={12} md={2}>\n                  <Button\n                    startIcon={<PersonAddIcon />}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Follow\n                  </Button>\n                </Grid>\n              </Grid>\n              <Typography variant=\"body1\" gutterBottom>\n                This is my BIO. I like cheese. I like Cows. Nom Nom Nom.\n              </Typography>\n            </div>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Grid container>\n        <Grid item xs={12} md={2}>\n          <div className={Shared.TabContainer}>\n            <Paper>\n              <Tabs\n                classes={{ indicator: Shared.TabUnderline }}\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                centered\n              >\n                <Tab label=\"Tweets\" />\n                <Tab label=\"Tweets & replies\" />\n                <Tab label=\"Media\" />\n                <Tab label=\"Like\" />\n              </Tabs>\n            </Paper>\n          </div>\n        </Grid>\n\n        <Grid item xs={11} md={10}>\n          <Typography variant=\"body1\" gutterBottom>\n            <CachedIcon /> Bob Smith retweeted\n          </Typography>\n          <Post />\n          <Post />\n          <Post />\n          <Post />\n          <Post />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Profile;\n","C:\\scratch\\Code\\Tweeder\\src\\Home.js",["86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React, { useEffect, useState, useContext } from \"react\";\nimport HomePage from \"./HomePage.module.scss\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Footer from \"./footer.js\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport Post from \"./Post\";\n\nconst Home = () => {\n  const TrendingTweets = [\n    { TweetName: \"programming\", NumberOfTweets: \"200k\" },\n    { TweetName: \"devchallenges\", NumberOfTweets: \"123k\" },\n    { TweetName: \"frontend\", NumberOfTweets: \"34k\" },\n    { TweetName: \"helsinki\", NumberOfTweets: \"11k\" },\n    { TweetName: \"100DaysOfCode\", NumberOfTweets: \"5k\" },\n    { TweetName: \"learntoCode\", NumberOfTweets: \"1k\" }\n  ];\n\n  const [OpenPopover, SetOpenPopover] = React.useState(false);\n  const [OpenAddImage, SetOpenAddImage] = React.useState(false);\n  const ClosePopOver = () => SetOpenPopover(false);\n  const OpenPopoverFunc = (event) => SetOpenPopover(event.currentTarget);\n\n  const AddImage = () => {\n    SetOpenAddImage(false);\n  };\n\n  return (\n    <div className={HomePage.background}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={8}>\n          <div className={HomePage.AddTweetContainer}>\n            <Typography variant=\"button\" gutterBottom>\n              Tweet Something\n            </Typography>\n            <Divider />\n            <div className={HomePage.AddTweetContent}>\n              <div className={HomePage.AddTweetTextboxContainer}>\n                <Avatar variant=\"rounded\">s</Avatar>\n\n                <TextField\n                  classes={{ root: HomePage.AddTweetTextbox }}\n                  fullWidth={true}\n                  label=\"Whats Happening?\"\n                />\n              </div>\n            </div>\n\n            <div className={HomePage.AddTweetBottom}>\n              <div>\n                <IconButton\n                  onClick={() => {\n                    SetOpenAddImage(true);\n                  }}\n                >\n                  <ImageIcon />\n                </IconButton>\n\n                <Dialog open={OpenAddImage} onClose={() => AddImage()}>\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Use Google's location service?\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      Let Google help apps determine location. This means\n                      sending anonymous location data to Google, even when no\n                      apps are running.\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={() => AddImage()} color=\"primary\">\n                      Disagree\n                    </Button>\n                    <Button\n                      onClick={() => AddImage()}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      Agree\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n\n                <Button onClick={OpenPopoverFunc} color=\"primary\">\n                  {\" \"}\n                  <PublicIcon /> <p> Everyone can reply </p>\n                </Button>\n              </div>\n\n              <div>\n                <Button variant=\"contained\" color=\"primary\">\n                  Tweet\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <Post />\n\n          <Post />\n          <Post />\n\n          <Popover\n            classes={{ paper: HomePage.AddTweetPopover }}\n            open={Boolean(OpenPopover)}\n            anchorEl={OpenPopover}\n            onClose={ClosePopOver}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\"\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\"\n            }}\n          >\n            <Typography variant=\"h6\" gutterBottom>\n              Who can reply?\n            </Typography>\n\n            <Typography variant=\"body2\" gutterBottom>\n              Choose who can reply to this Tweet\n            </Typography>\n            <Button\n              classes={{ root: HomePage.PopoverButtons }}\n              fullWidth={true}\n            >\n              {\" \"}\n              <PublicIcon /> <p> Everyone </p>\n            </Button>\n\n            <Button\n              classes={{ root: HomePage.PopoverButtons }}\n              fullWidth={true}\n            >\n              {\" \"}\n              <PeopleIcon /> <p> People you follow </p>\n            </Button>\n          </Popover>\n        </Grid>\n        <Hidden smDown={true}>\n          <Grid item md={4}>\n            <Paper\n              classes={{ root: HomePage.TrendingTweetsContainer }}\n              elevation={0}\n            >\n              {\" \"}\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\n                Trends for you\n              </Typography>{\" \"}\n              <Divider />\n              {TrendingTweets.map((tweet) => {\n                return (\n                  <div>\n                    <Typography variant=\"h6\" gutterBottom>\n                      #{tweet.TweetName}\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                      {tweet.NumberOfTweets} Tweets\n                    </Typography>\n                  </div>\n                );\n              })}\n            </Paper>\n\n            <Paper\n              classes={{ root: HomePage.TrendingTweetsContainer }}\n              elevation={0}\n            >\n              {\" \"}\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\n                Who to Follow\n              </Typography>{\" \"}\n              <Divider />\n              <CardHeader\n                avatar={\n                  <Avatar\n                    variant=\"rounded\"\n                    src=\"https://i.pinimg.com/originals/d8/ab/6a/d8ab6a527914cba58261361792653287.jpg\"\n                    alt=\"derp\"\n                  />\n                }\n                classes={{\n                  root: \"TextAllignLeft\"\n                }}\n                title={\n                  <Typography variant=\"h5\" gutterBottom>\n                    Derp\n                  </Typography>\n                }\n                subheader={\n                  <Typography variant=\"body2\" gutterBottom>\n                    230k Followers\n                  </Typography>\n                }\n                action={\n                  <Button variant=\"contained\" color=\"primary\">\n                    Tweet\n                  </Button>\n                }\n              />\n              <Typography variant=\"body1\" gutterBottom>\n                MUNCH MUNCHMUNCHMUNCHMUNCHMUNCH MUNCH MUNCH MUNCH MUNCH MUNCH\n              </Typography>\n              <img\n                style={{ height: \"100%\", width: \"100%\" }}\n                src=\"https://lh3.googleusercontent.com/proxy/tmZo_sc4Pczuo9Xy6wTC8Z3Iv6rtVKJNwoOmpjH8F5Un3lVOGLo54-EgEbdpZbFWQzpItkjERjP4mbtTRVvKC2zJt_fScfp1OrB-_q0N0Ds\"\n              />\n              <Divider />\n              <CardHeader\n                avatar={\n                  <Avatar\n                    variant=\"rounded\"\n                    src=\"https://pm1.narvii.com/6170/6b10b3eafebf6f89c28da751e9748976732f5d24_hq.jpg\"\n                    alt=\"derp\"\n                  />\n                }\n                classes={{\n                  root: \"TextAllignLeft\"\n                }}\n                title={\n                  <Typography variant=\"h5\" gutterBottom>\n                    Derp\n                  </Typography>\n                }\n                subheader={\n                  <Typography variant=\"body2\" gutterBottom>\n                    230k Followers\n                  </Typography>\n                }\n                action={\n                  <Button variant=\"contained\" color=\"primary\">\n                    Tweet\n                  </Button>\n                }\n              />\n              <Typography variant=\"body1\" gutterBottom>\n                MUNCH MUNCHMUNCHMUNCHMUNCHMUNCH MUNCH MUNCH MUNCH MUNCH MUNCH\n              </Typography>\n              <img\n                style={{ height: \"100%\", width: \"100%\" }}\n                src=\"https://pm1.narvii.com/6170/6b10b3eafebf6f89c28da751e9748976732f5d24_hq.jpg\"\n              />\n            </Paper>\n          </Grid>\n        </Hidden>\n        <Footer />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\scratch\\Code\\Tweeder\\src\\Explore.js",["99","100"],"import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Button from \"@material-ui/core/Button\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Shared from \"./Shared.module.scss\";\nimport Post from \"./Post.js\";\nconst Explore = () => {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Grid spacing={2} container>\n      <Grid item xs={3}>\n        <div className={Shared.TabContainer}>\n          <Paper>\n            <Tabs\n              classes={{ indicator: Shared.TabUnderline }}\n              orientation=\"vertical\"\n              variant=\"scrollable\"\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              centered\n            >\n              <Tab label=\"Top\" />\n              <Tab label=\"Lastest\" />\n              <Tab label=\"People\" />\n              <Tab label=\"Media\" />\n            </Tabs>\n          </Paper>\n        </div>\n      </Grid>\n\n      <Grid item xs={9}>\n        <Paper>\n          <InputBase\n            fullWidth={true}\n            multiline={true}\n            value=\"\"\n            placeholder=\"Tweet Your Reply\"\n            startAdornment={<SearchIcon />}\n            endAdornment={\n              <Button variant=\"contained\" color=\"primary\">\n                Search\n              </Button>\n            }\n          />\n        </Paper>\n        <Grid spacing={2} container>\n          <Grid item xs={12} md={6}>\n            <Post PostType=\"Image\" />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Post />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Post />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Explore;\n","C:\\scratch\\Code\\Tweeder\\src\\FooterNavBar.js",["101"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ExploreIcon from \"@material-ui/icons/Explore\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport NavBarStyle from \"./NavBar.module.scss\";\nconst FooterNavBar = (props) => {\n  return (\n    <Hidden mdUp={true}>\n      <div className={NavBarStyle.BottomNavBar}>\n        <BottomNavigation\n          value={props.TabValue}\n          onChange={(event, newValue) => {\n            props.UpdateTab(newValue);\n          }}\n          showLabels\n        >\n          <BottomNavigationAction label=\"Home\" icon={<HomeIcon />} />\n          <BottomNavigationAction label=\"Explore\" icon={<ExploreIcon />} />\n          <BottomNavigationAction label=\"Bookmarks\" icon={<BookmarkIcon />} />\n        </BottomNavigation>\n      </div>\n    </Hidden>\n  );\n};\n\nexport default FooterNavBar;\n","C:\\scratch\\Code\\Tweeder\\src\\NarBar.js",["102","103","104"],"import React, { useEffect, useState, useContext } from \"react\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport NavBarStyle from \"./NavBar.module.scss\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Button from \"@material-ui/core/Button\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Divider from \"@material-ui/core/Divider\";\nimport appStateContext from \"./Shared/appState\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst NavBar = (props) => {\n  const appState = useContext(appStateContext);\n  const [OpenPopover, SetOpenPopover] = React.useState(false);\n  const ClosePopOver = () => SetOpenPopover(false);\n  const OpenPopoverFunc = (event) => SetOpenPopover(event.currentTarget);\n\n  const handleChange = (event, newValue) => {\n    props.UpdateTab(newValue);\n  };\n\n  return (\n    <>\n      <div className={NavBarStyle.NavBar}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs={3}>\n            <IconButton\n              onClick={() => {\n                props.UpdateTab(0);\n              }}\n            >\n              <TwitterIcon />\n            </IconButton>\n            <Hidden smDown={true}>\n              <Typography display=\"inline\" variant=\"h6\">\n                Tweeder\n              </Typography>\n            </Hidden>\n          </Grid>\n          <Grid item xs={6}>\n            <Grid container justify=\"center\">\n              <Hidden smDown={true}>\n                <Tabs\n                  value={props.TabValue}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  centered\n                >\n                  <Tab label=\"Home\" />\n                  <Tab label=\"Explore\" />\n                  <Tab label=\"Bookmarks \" />\n                </Tabs>\n              </Hidden>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={3}>\n            <Grid container spacing={5} justify=\"flex-end\" alignItems=\"center\">\n              <Grid item>\n                <IconButton onClick={OpenPopoverFunc}>\n                  <Avatar\n                    variant=\"rounded\"\n                    alt=\"Remy Sharp\"\n                    src=\"/broken-image.jpg\"\n                  />\n                </IconButton>\n\n                <Hidden smDown={true}>\n                  <Typography\n                    classes={{ root: NavBarStyle.ProfileNameDiv }}\n                    display=\"inline\"\n                    variant=\"subtitle2\"\n                  >\n                    Bob Smith{\" \"}\n                  </Typography>\n                </Hidden>\n\n                <Popover\n                  open={Boolean(OpenPopover)}\n                  anchorEl={OpenPopover}\n                  onClose={ClosePopOver}\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"center\"\n                  }}\n                  transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\"\n                  }}\n                >\n                  <ButtonGroup\n                    classes={{ grouped: NavBarStyle.ProfileMenu }}\n                    orientation=\"vertical\"\n                  >\n                    <Button\n                      onClick={() => props.UpdateTab(3)}\n                      startIcon={<AccountCircleIcon />}\n                    >\n                      My Profile\n                    </Button>\n                    <Button disabled startIcon={<GroupIcon />}>\n                      Group Chat\n                    </Button>\n                    <Button disabled startIcon={<SettingsIcon />}>\n                      Settings\n                    </Button>\n                    <Divider variant=\"middle\" />\n                    <Button\n                      onClick={() => {\n                        appState.Auth0Client.logout();\n                      }}\n                      classes={{ grouped: NavBarStyle.Logout }}\n                      startIcon={<ExitToAppIcon />}\n                    >\n                      Logout\n                    </Button>\n                  </ButtonGroup>\n                </Popover>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default NavBar;\n","C:\\scratch\\Code\\Tweeder\\src\\Shared\\appState.js",["105","106"],"import { observable, action, computed } from \"mobx\";\nimport { ApiCall } from \"./ApiCall\";\nimport { createContext } from \"react\";\n\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nclass AppState {\n  @observable Auth0Client = \"\";\n\n  @action GetAuth0Client = async () => {\n   await  createAuth0Client({\n      domain: \"dev-5wttvoce.auth0.com\",\n      client_id: \"a47WBv2GDMgTgLLpbRkDQK31mkPVcnGh\",\n      //Redirect URL when authenication suceeds\n      redirect_uri: `${process.env.REACT_APP_FrontEndSiteURL}`\n      /*, audience: \"https://TweederClone.com\" */\n    }).then((auth0) => {\n      this.Auth0Client = auth0;\n    });\n  };\n}\n \nconst appStateContext = createContext(new AppState());\nexport default appStateContext;\n","C:\\scratch\\Code\\Tweeder\\src\\footer.js",[],"C:\\scratch\\Code\\Tweeder\\src\\Post.js",["107","108"],"import React, { useEffect, useState, useContext } from \"react\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport PostImage from \"./PostImage\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Shared from \"./Shared.module.scss\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst Post = (props) => {\n  const [OpenComments, SetOpenComments] = useState(false);\n\n  const RenderPost = () => {\n    if (props.PostType === \"Image\") {\n      return (\n        <PostImage\n          PostMessage=\"I like Cheese, Cows and Milk\"\n          Images={[\n            {\n              original:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (1).JPEG\",\n              thumbnail:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (1).JPEG\",\n              description: \"Starting Video Call\",\n              ProjectGithubLink: \"https://github.com/dim505/SocialMedia\",\n              ProjectLiveLink: \"https://socialmediafrontend.azurewebsites.net/\"\n            },\n            {\n              original:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (2).JPEG\",\n              thumbnail:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (2).JPEG\",\n              description: \"\",\n              ProjectGithubLink: \"https://github.com/dim505/SocialMedia\",\n              ProjectLiveLink: \"https://socialmediafrontend.azurewebsites.net/\"\n            },\n            {\n              original:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (3).JPEG\",\n              thumbnail:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (3).JPEG\",\n              description: \"\",\n              ProjectGithubLink: \"https://github.com/dim505/SocialMedia\",\n              ProjectLiveLink: \"https://socialmediafrontend.azurewebsites.net/\"\n            },\n            {\n              original:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (4).JPEG\",\n              thumbnail:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (4).JPEG\",\n              description: \"Other Participant is joining\",\n              ProjectGithubLink: \"https://github.com/dim505/SocialMedia\",\n              ProjectLiveLink: \"https://socialmediafrontend.azurewebsites.net/\"\n            },\n            {\n              original:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (5).JPEG\",\n              thumbnail:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (5).JPEG\",\n              description: \"\",\n              ProjectGithubLink: \"https://github.com/dim505/SocialMedia\",\n              ProjectLiveLink: \"https://socialmediafrontend.azurewebsites.net/\"\n            }\n          ]}\n        />\n      );\n    } else {\n      return (\n        <Typography\n          classes={{\n            root: \"TextAllignLeft\"\n          }}\n          variant=\"body2\"\n          component=\"p\"\n        >\n          INEEEEEEE\n        </Typography>\n      );\n    }\n  };\n\n  return (\n    <Paper classes={{ root: Shared.PostContainer }} elevation={0}>\n      <CardHeader\n        avatar={\n          <Avatar\n            variant=\"rounded\"\n            src=\"https://i.pinimg.com/originals/d8/ab/6a/d8ab6a527914cba58261361792653287.jpg\"\n            alt=\"derp\"\n          />\n        }\n        classes={{\n          root: \"TextAllignLeft\"\n        }}\n        title=\"derp\"\n        subheader={\"August 20, 2020 at 20:43 \"}\n      />{\" \"}\n      <CardContent>\n        {\" \"}\n        {RenderPost()}\n        <Typography\n          align=\"right\"\n          variant=\"caption\"\n          display=\"block\"\n          gutterBottom\n        >\n          449 Comments 59k Retweets 234 Saved\n        </Typography>\n        <Divider />\n        <div className={Shared.PostButtonsContainer}>\n          <Hidden lgUp={true}>\n            <Tooltip title=\"Comments\">\n              <IconButton\n                onClick={() => {\n                  SetOpenComments(!OpenComments);\n                }}\n              >\n                <CommentIcon />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Retweet\">\n              <IconButton classes={{ root: Shared.RetweetBtn }}>\n                <AutorenewIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Liked\">\n              <IconButton classes={{ root: Shared.LikedBtn }}>\n                <FavoriteBorderIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Saved\">\n              <IconButton classes={{ root: Shared.SavedBtn }}>\n                <BookmarkBorderIcon />\n              </IconButton>\n            </Tooltip>\n          </Hidden>\n\n          <Hidden mdDown={true}>\n            {\" \"}\n            <Button\n              onClick={() => {\n                SetOpenComments(!OpenComments);\n              }}\n            >\n              {\" \"}\n              <CommentIcon /> <p> Comment</p>\n            </Button>\n            <Button classes={{ root: Shared.RetweetBtn }}>\n              {\" \"}\n              <AutorenewIcon /> <p> Retweeted</p>\n            </Button>\n            <Button classes={{ root: Shared.LikedBtn }}>\n              {\" \"}\n              <FavoriteBorderIcon /> <p> Liked</p>\n            </Button>\n            <Button classes={{ root: Shared.SavedBtn }}>\n              {\" \"}\n              <BookmarkBorderIcon /> <p> Saved</p>\n            </Button>\n          </Hidden>\n        </div>\n        <Divider />\n      </CardContent>\n      <Collapse in={OpenComments}>\n        <CardHeader\n          avatar={<Avatar variant=\"rounded\" alt=\"\" src=\"\"></Avatar>}\n          classes={{\n            root: \"TextAllignLeft\"\n          }}\n          title={\n            <>\n              <div className={Shared.DisplayCommentTextBox}>\n                <div>\n                  <Typography display=\"inline\" variant=\"subtitle1\" gutterBottom>\n                    Bob Smithty {\"        \"}\n                  </Typography>\n\n                  <Typography display=\"inline\" variant=\"caption\" gutterBottom>\n                    August 20, 2020 at 20:43\n                  </Typography>\n                </div>\n                <Typography variant=\"body2\" gutterBottom>\n                  This is a test comment. TEST TESTTESTTESTTESTTEST\n                  TESTTESTTESTTESTTESTTESTTEST\n                </Typography>\n              </div>\n\n              <Button size=\"small\" classes={{ root: Shared.LikedBtn }}>\n                {\" \"}\n                <FavoriteBorderIcon /> Liked\n              </Button>\n\n              <Typography display=\"inline\" variant=\"caption\" gutterBottom>\n                12.3 Likes\n              </Typography>\n            </>\n          }\n        />\n        <CardHeader\n          avatar={<Avatar variant=\"rounded\" alt=\"\" src=\"\"></Avatar>}\n          classes={{\n            root: \"TextAllignLeft\"\n          }}\n          title={\n            <div>\n              <InputBase\n                fullWidth={true}\n                multiline={true}\n                value=\"\"\n                classes={{ root: Shared.AddCommentTextBox }}\n                placeholder=\"Tweet Your Reply\"\n                endAdornment={\n                  <IconButton>\n                    <ImageIcon />\n                  </IconButton>\n                }\n              />\n            </div>\n          }\n        />\n      </Collapse>\n    </Paper>\n  );\n};\n\nexport default Post;\n","C:\\scratch\\Code\\Tweeder\\src\\Shared\\ApiCall.js",[],"C:\\scratch\\Code\\Tweeder\\src\\PostImage.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":20,"column":10,"nodeType":"115","messageId":"116","endLine":20,"endColumn":15},{"ruleId":"117","severity":1,"message":"118","line":25,"column":13,"nodeType":"119","endLine":45,"endColumn":4},{"ruleId":"117","severity":1,"message":"120","line":45,"column":6,"nodeType":"121","endLine":45,"endColumn":8,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":46,"column":3,"nodeType":"125","messageId":"126","endLine":48,"endColumn":4},{"ruleId":"113","severity":1,"message":"127","line":50,"column":9,"nodeType":"115","messageId":"116","endLine":50,"endColumn":21},{"ruleId":"113","severity":1,"message":"128","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"129","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"128","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"130","line":1,"column":38,"nodeType":"115","messageId":"116","endLine":1,"endColumn":48},{"ruleId":"113","severity":1,"message":"128","line":7,"column":17,"nodeType":"115","messageId":"116","endLine":7,"endColumn":26},{"ruleId":"113","severity":1,"message":"130","line":7,"column":38,"nodeType":"115","messageId":"116","endLine":7,"endColumn":48},{"ruleId":"131","severity":1,"message":"132","line":22,"column":7,"nodeType":"133","endLine":27,"endColumn":9},{"ruleId":"131","severity":1,"message":"132","line":32,"column":13,"nodeType":"133","endLine":38,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":50,"column":25,"nodeType":"136","endLine":50,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":60,"column":25,"nodeType":"136","endLine":60,"endColumn":37},{"ruleId":"113","severity":1,"message":"128","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"129","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"130","line":1,"column":38,"nodeType":"115","messageId":"116","endLine":1,"endColumn":48},{"ruleId":"113","severity":1,"message":"137","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":24},{"ruleId":"113","severity":1,"message":"138","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":19},{"ruleId":"113","severity":1,"message":"139","line":10,"column":8,"nodeType":"115","messageId":"116","endLine":10,"endColumn":19},{"ruleId":"113","severity":1,"message":"140","line":19,"column":8,"nodeType":"115","messageId":"116","endLine":19,"endColumn":19},{"ruleId":"113","severity":1,"message":"141","line":20,"column":8,"nodeType":"115","messageId":"116","endLine":20,"endColumn":21},{"ruleId":"113","severity":1,"message":"142","line":21,"column":8,"nodeType":"115","messageId":"116","endLine":21,"endColumn":26},{"ruleId":"113","severity":1,"message":"143","line":22,"column":8,"nodeType":"115","messageId":"116","endLine":22,"endColumn":17},{"ruleId":"113","severity":1,"message":"144","line":30,"column":8,"nodeType":"115","messageId":"116","endLine":30,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":229,"column":15,"nodeType":"133","endLine":232,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":264,"column":15,"nodeType":"133","endLine":267,"endColumn":17},{"ruleId":"113","severity":1,"message":"128","line":8,"column":17,"nodeType":"115","messageId":"116","endLine":8,"endColumn":26},{"ruleId":"113","severity":1,"message":"130","line":8,"column":38,"nodeType":"115","messageId":"116","endLine":8,"endColumn":48},{"ruleId":"113","severity":1,"message":"147","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":20},{"ruleId":"113","severity":1,"message":"128","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"129","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"148","line":10,"column":8,"nodeType":"115","messageId":"116","endLine":10,"endColumn":25},{"ruleId":"113","severity":1,"message":"149","line":1,"column":30,"nodeType":"115","messageId":"116","endLine":1,"endColumn":38},{"ruleId":"113","severity":1,"message":"150","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":17},{"ruleId":"113","severity":1,"message":"128","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"130","line":1,"column":38,"nodeType":"115","messageId":"116","endLine":1,"endColumn":48},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'appState'. Either include it or remove the dependency array.","ArrayExpression",["153"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleChange' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'PerfectScrollbar' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'CommentIcon' is defined but never used.","'AutorenewIcon' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'InputBase' is defined but never used.","'BookmarkBorderIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'makeStyles' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'computed' is defined but never used.","'ApiCall' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},"Update the dependencies array to be: [appState]",{"range":"156","text":"157"},[1533,1535],"[appState]"]