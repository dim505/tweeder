[{"C:\\scratch\\Tweeder\\src\\index.js":"1","C:\\scratch\\Tweeder\\src\\App.js":"2","C:\\scratch\\Tweeder\\src\\FrontPage.js":"3","C:\\scratch\\Tweeder\\src\\home.js":"4","C:\\scratch\\Tweeder\\src\\NarBar.js":"5","C:\\scratch\\Tweeder\\src\\Shared\\appState.js":"6","C:\\scratch\\Tweeder\\src\\footer.js":"7","C:\\scratch\\Tweeder\\src\\Shared\\ApiCall.js":"8","C:\\scratch\\Tweeder\\src\\Home.js":"9","C:\\scratch\\Tweeder\\src\\Explore.js":"10","C:\\scratch\\Tweeder\\src\\Post.js":"11","C:\\scratch\\Tweeder\\src\\Bookmarks.js":"12","C:\\scratch\\Tweeder\\src\\FooterNavBar.js":"13","C:\\scratch\\Tweeder\\src\\PostImage.js":"14","C:\\scratch\\Tweeder\\src\\Profile.js":"15"},{"size":179,"mtime":1618067056000,"results":"16","hashOfConfig":"17"},{"size":2725,"mtime":1618067056000,"results":"18","hashOfConfig":"17"},{"size":1549,"mtime":1618067056000,"results":"19","hashOfConfig":"17"},{"size":13048,"mtime":1615975927818,"results":"20","hashOfConfig":"21"},{"size":4828,"mtime":1618067056000,"results":"22","hashOfConfig":"17"},{"size":720,"mtime":1618067056000,"results":"23","hashOfConfig":"17"},{"size":392,"mtime":1618067056000,"results":"24","hashOfConfig":"17"},{"size":963,"mtime":1618067056000,"results":"25","hashOfConfig":"17"},{"size":9810,"mtime":1618067056000,"results":"26","hashOfConfig":"17"},{"size":2037,"mtime":1618067056000,"results":"27","hashOfConfig":"17"},{"size":8365,"mtime":1618067056000,"results":"28","hashOfConfig":"17"},{"size":1505,"mtime":1618067056000,"results":"29","hashOfConfig":"17"},{"size":1103,"mtime":1618067056000,"results":"30","hashOfConfig":"17"},{"size":579,"mtime":1618067056000,"results":"31","hashOfConfig":"17"},{"size":3972,"mtime":1618067056000,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rrxpu0",{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":1,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},"r423w8",{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\scratch\\Tweeder\\src\\index.js",[],"C:\\scratch\\Tweeder\\src\\App.js",["65","66","67","68","69"],"C:\\scratch\\Tweeder\\src\\FrontPage.js",["70","71"],"C:\\scratch\\Tweeder\\src\\home.js",["72","73","74","75","76","77"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport HomePage from \"./HomePage.module.scss\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Footer from \"./footer.js\";\r\n\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nconst TrendingTweets = [\r\n  { TweetName: \"programming\", NumberOfTweets: \"200k\" },\r\n  { TweetName: \"devchallenges\", NumberOfTweets: \"123k\" },\r\n  { TweetName: \"frontend\", NumberOfTweets: \"34k\" },\r\n  { TweetName: \"helsinki\", NumberOfTweets: \"11k\" },\r\n  { TweetName: \"100DaysOfCode\", NumberOfTweets: \"5k\" },\r\n  { TweetName: \"learntoCode\", NumberOfTweets: \"1k\" }\r\n];\r\n\r\nconst home = () => {\r\n  const [OpenPopover, SetOpenPopover] = useState(false);\r\n  const ClosePopOver = () => SetOpenPopover(false);\r\n  const OpenPopoverFunc = (event) => SetOpenPopover(event.currentTarget);\r\n\r\n  return (\r\n    <div className={HomePage.background}>\r\n      <PerfectScrollbar className={HomePage.PostBody}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={8}>\r\n            <div className={HomePage.AddTweetContainer}>\r\n              <Typography variant=\"button\" gutterBottom>\r\n                Tweet Something\r\n              </Typography>\r\n              <Divider />\r\n              <div className={HomePage.AddTweetContent}>\r\n                <div className={HomePage.AddTweetTextboxContainer}>\r\n                  <Avatar variant=\"rounded\">s</Avatar>\r\n\r\n                  <TextField\r\n                    classes={{ root: HomePage.AddTweetTextbox }}\r\n                    fullWidth={true}\r\n                    label=\"Whats Happening?\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={HomePage.AddTweetBottom}>\r\n                <div>\r\n                  <IconButton>\r\n                    <ImageIcon />\r\n                  </IconButton>\r\n                  <Button onClick={OpenPopoverFunc} color=\"primary\">\r\n                    {\" \"}\r\n                    <PublicIcon /> <p> Everyone can reply </p>\r\n                  </Button>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Tweet\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Paper\r\n              classes={{ root: HomePage.TrendingTweetsContainer }}\r\n              elevation={0}\r\n            >\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    src=\"https://i.pinimg.com/originals/d8/ab/6a/d8ab6a527914cba58261361792653287.jpg\"\r\n                    alt=\"derp\"\r\n                  />\r\n                }\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title=\"derp\"\r\n                subheader={\"August 20, 2020 at 20:43 \"}\r\n              />{\" \"}\r\n              <CardContent>\r\n                {\" \"}\r\n                <Typography\r\n                  classes={{\r\n                    root: \"TextAllignLeft\"\r\n                  }}\r\n                  variant=\"body2\"\r\n                  component=\"p\"\r\n                >\r\n                  Nen dsanoifnoiegiwegniwegnoiwefoief\r\n                </Typography>\r\n                <Typography\r\n                  align=\"right\"\r\n                  variant=\"caption\"\r\n                  display=\"block\"\r\n                  gutterBottom\r\n                >\r\n                  449 Comments 59k Retweets 234 Saved\r\n                </Typography>\r\n                <Divider />\r\n                <div className={HomePage.PostButtonsContainer}>\r\n                  {\" \"}\r\n                  <Button>\r\n                    {\" \"}\r\n                    <CommentIcon /> <p> Comment</p>\r\n                  </Button>\r\n                  <Button classes={{ root: HomePage.RetweetBtn }}>\r\n                    {\" \"}\r\n                    <AutorenewIcon /> <p> Retweeted</p>\r\n                  </Button>\r\n                  <Button classes={{ root: HomePage.LikedBtn }}>\r\n                    {\" \"}\r\n                    <FavoriteBorderIcon /> <p> Liked</p>\r\n                  </Button>\r\n                  <Button classes={{ root: HomePage.SavedBtn }}>\r\n                    {\" \"}\r\n                    <BookmarkBorderIcon /> <p> Saved</p>\r\n                  </Button>\r\n                </div>\r\n                <Divider />\r\n              </CardContent>\r\n              <CardHeader\r\n                avatar={<Avatar variant=\"rounded\" alt=\"\" src=\"\"></Avatar>}\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <div>\r\n                    <InputBase\r\n                      fullWidth={true}\r\n                      multiline={true}\r\n                      value=\"\"\r\n                      classes={{ root: HomePage.AddCommentTextBox }}\r\n                      placeholder=\"Tweet Your Reply\"\r\n                      endAdornment={\r\n                        <IconButton>\r\n                          <ImageIcon />\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </div>\r\n                }\r\n              />\r\n              <CardHeader\r\n                avatar={<Avatar variant=\"rounded\" alt=\"\" src=\"\"></Avatar>}\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <>\r\n                    <div className={HomePage.DisplayCommentTextBox}>\r\n                      <div>\r\n                        <Typography\r\n                          display=\"inline\"\r\n                          variant=\"subtitle1\"\r\n                          gutterBottom\r\n                        >\r\n                          Bob Smithty {\"        \"}\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          display=\"inline\"\r\n                          variant=\"caption\"\r\n                          gutterBottom\r\n                        >\r\n                          August 20, 2020 at 20:43\r\n                        </Typography>\r\n                      </div>\r\n                      <Typography variant=\"body2\" gutterBottom>\r\n                        This is a test comment. TEST TESTTESTTESTTESTTEST\r\n                        TESTTESTTESTTESTTESTTESTTEST\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <Button size=\"small\" classes={{ root: HomePage.LikedBtn }}>\r\n                      {\" \"}\r\n                      <FavoriteBorderIcon /> Liked\r\n                    </Button>\r\n\r\n                    <Typography display=\"inline\" variant=\"caption\" gutterBottom>\r\n                      12.3 Likes\r\n                    </Typography>\r\n                  </>\r\n                }\r\n              />\r\n            </Paper>\r\n\r\n            <Popover\r\n              classes={{ paper: HomePage.AddTweetPopover }}\r\n              open={Boolean(OpenPopover)}\r\n              anchorEl={OpenPopover}\r\n              onClose={ClosePopOver}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"center\"\r\n              }}\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"center\"\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Who can reply?\r\n              </Typography>\r\n\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                Choose who can reply to this Tweet\r\n              </Typography>\r\n              <Button\r\n                classes={{ root: HomePage.PopoverButtons }}\r\n                fullWidth={true}\r\n              >\r\n                {\" \"}\r\n                <PublicIcon /> <p> Everyone </p>\r\n              </Button>\r\n\r\n              <Button\r\n                classes={{ root: HomePage.PopoverButtons }}\r\n                fullWidth={true}\r\n              >\r\n                {\" \"}\r\n                <PeopleIcon /> <p> People you follow </p>\r\n              </Button>\r\n            </Popover>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <Paper\r\n              classes={{ root: HomePage.TrendingTweetsContainer }}\r\n              elevation={0}\r\n            >\r\n              {\" \"}\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Trends for you\r\n              </Typography>{\" \"}\r\n              <Divider />\r\n              {TrendingTweets.map((tweet) => {\r\n                return (\r\n                  <div>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      #{tweet.TweetName}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" gutterBottom>\r\n                      {tweet.NumberOfTweets} Tweets\r\n                    </Typography>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Paper>\r\n\r\n            <Paper\r\n              classes={{ root: HomePage.TrendingTweetsContainer }}\r\n              elevation={0}\r\n            >\r\n              {\" \"}\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Who to Follow\r\n              </Typography>{\" \"}\r\n              <Divider />\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    src=\"https://i.pinimg.com/originals/d8/ab/6a/d8ab6a527914cba58261361792653287.jpg\"\r\n                    alt=\"derp\"\r\n                  />\r\n                }\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Derp\r\n                  </Typography>\r\n                }\r\n                subheader={\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    230k Followers\r\n                  </Typography>\r\n                }\r\n                action={\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Tweet\r\n                  </Button>\r\n                }\r\n              />\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                MUNCH MUNCHMUNCHMUNCHMUNCHMUNCH MUNCH MUNCH MUNCH MUNCH MUNCH\r\n              </Typography>\r\n              <img\r\n                style={{ height: \"100%\", width: \"100%\" }}\r\n                src=\"https://lh3.googleusercontent.com/proxy/tmZo_sc4Pczuo9Xy6wTC8Z3Iv6rtVKJNwoOmpjH8F5Un3lVOGLo54-EgEbdpZbFWQzpItkjERjP4mbtTRVvKC2zJt_fScfp1OrB-_q0N0Ds\"\r\n              />\r\n              <Divider />\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    src=\"https://pm1.narvii.com/6170/6b10b3eafebf6f89c28da751e9748976732f5d24_hq.jpg\"\r\n                    alt=\"derp\"\r\n                  />\r\n                }\r\n                classes={{\r\n                  root: \"TextAllignLeft\"\r\n                }}\r\n                title={\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Derp\r\n                  </Typography>\r\n                }\r\n                subheader={\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    230k Followers\r\n                  </Typography>\r\n                }\r\n                action={\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Tweet\r\n                  </Button>\r\n                }\r\n              />\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                MUNCH MUNCHMUNCHMUNCHMUNCHMUNCH MUNCH MUNCH MUNCH MUNCH MUNCH\r\n              </Typography>\r\n              <img\r\n                style={{ height: \"100%\", width: \"100%\" }}\r\n                src=\"https://pm1.narvii.com/6170/6b10b3eafebf6f89c28da751e9748976732f5d24_hq.jpg\"\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Footer />\r\n        </Grid>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default home;\r\n",["78","79"],"C:\\scratch\\Tweeder\\src\\NarBar.js",["80","81","82"],"C:\\scratch\\Tweeder\\src\\Shared\\appState.js",["83","84"],"C:\\scratch\\Tweeder\\src\\footer.js",[],"C:\\scratch\\Tweeder\\src\\Shared\\ApiCall.js",[],"C:\\scratch\\Tweeder\\src\\Home.js",["85","86","87","88","89","90","91","92","93","94","95","96","97"],"C:\\scratch\\Tweeder\\src\\Explore.js",["98","99"],"C:\\scratch\\Tweeder\\src\\Post.js",["100","101"],"C:\\scratch\\Tweeder\\src\\Bookmarks.js",["102","103"],"C:\\scratch\\Tweeder\\src\\FooterNavBar.js",["104"],"C:\\scratch\\Tweeder\\src\\PostImage.js",[],"C:\\scratch\\Tweeder\\src\\Profile.js",["105","106","107","108","109","110"],{"ruleId":"111","severity":1,"message":"112","line":20,"column":10,"nodeType":"113","messageId":"114","endLine":20,"endColumn":15},{"ruleId":"115","severity":1,"message":"116","line":25,"column":13,"nodeType":"117","endLine":45,"endColumn":4},{"ruleId":"115","severity":1,"message":"118","line":45,"column":6,"nodeType":"119","endLine":45,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":46,"column":3,"nodeType":"123","messageId":"124","endLine":48,"endColumn":4},{"ruleId":"111","severity":1,"message":"125","line":50,"column":9,"nodeType":"113","messageId":"114","endLine":50,"endColumn":21},{"ruleId":"111","severity":1,"message":"126","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"127","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"126","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"128","line":1,"column":38,"nodeType":"113","messageId":"114","endLine":1,"endColumn":48},{"ruleId":"111","severity":1,"message":"129","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":19},{"ruleId":"130","severity":2,"message":"131","line":36,"column":41,"nodeType":"113","endLine":36,"endColumn":49},{"ruleId":"132","severity":1,"message":"133","line":308,"column":15,"nodeType":"134","endLine":311,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":343,"column":15,"nodeType":"134","endLine":346,"endColumn":17},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"111","severity":1,"message":"126","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"127","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"139","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":25},{"ruleId":"111","severity":1,"message":"140","line":1,"column":30,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"141","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":17},{"ruleId":"111","severity":1,"message":"126","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"127","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"128","line":1,"column":38,"nodeType":"113","messageId":"114","endLine":1,"endColumn":48},{"ruleId":"111","severity":1,"message":"142","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":24},{"ruleId":"111","severity":1,"message":"143","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":19},{"ruleId":"111","severity":1,"message":"129","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":19},{"ruleId":"111","severity":1,"message":"144","line":19,"column":8,"nodeType":"113","messageId":"114","endLine":19,"endColumn":19},{"ruleId":"111","severity":1,"message":"145","line":20,"column":8,"nodeType":"113","messageId":"114","endLine":20,"endColumn":21},{"ruleId":"111","severity":1,"message":"146","line":21,"column":8,"nodeType":"113","messageId":"114","endLine":21,"endColumn":26},{"ruleId":"111","severity":1,"message":"147","line":22,"column":8,"nodeType":"113","messageId":"114","endLine":22,"endColumn":17},{"ruleId":"111","severity":1,"message":"148","line":30,"column":8,"nodeType":"113","messageId":"114","endLine":30,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":229,"column":15,"nodeType":"134","endLine":232,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":264,"column":15,"nodeType":"134","endLine":267,"endColumn":17},{"ruleId":"111","severity":1,"message":"126","line":8,"column":17,"nodeType":"113","messageId":"114","endLine":8,"endColumn":26},{"ruleId":"111","severity":1,"message":"128","line":8,"column":38,"nodeType":"113","messageId":"114","endLine":8,"endColumn":48},{"ruleId":"111","severity":1,"message":"126","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"128","line":1,"column":38,"nodeType":"113","messageId":"114","endLine":1,"endColumn":48},{"ruleId":"111","severity":1,"message":"126","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"128","line":1,"column":38,"nodeType":"113","messageId":"114","endLine":1,"endColumn":48},{"ruleId":"111","severity":1,"message":"149","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":20},{"ruleId":"111","severity":1,"message":"126","line":7,"column":17,"nodeType":"113","messageId":"114","endLine":7,"endColumn":26},{"ruleId":"111","severity":1,"message":"128","line":7,"column":38,"nodeType":"113","messageId":"114","endLine":7,"endColumn":48},{"ruleId":"150","severity":1,"message":"151","line":22,"column":7,"nodeType":"134","endLine":27,"endColumn":9},{"ruleId":"150","severity":1,"message":"151","line":32,"column":13,"nodeType":"134","endLine":38,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":50,"column":25,"nodeType":"154","endLine":50,"endColumn":37},{"ruleId":"152","severity":1,"message":"153","line":60,"column":25,"nodeType":"154","endLine":60,"endColumn":37},"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'appState'. Either include it or remove the dependency array.","ArrayExpression",["155"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleChange' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'CardActions' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"home\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["156"],"no-negated-in-lhs",["157"],"'ArrowDropDownIcon' is defined but never used.","'computed' is defined but never used.","'ApiCall' is defined but never used.","'PerfectScrollbar' is defined but never used.","'CardContent' is defined but never used.","'CommentIcon' is defined but never used.","'AutorenewIcon' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'InputBase' is defined but never used.","'BookmarkBorderIcon' is defined but never used.","'makeStyles' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"desc":"158","fix":"159"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [appState]",{"range":"160","text":"161"},[1533,1535],"[appState]"]